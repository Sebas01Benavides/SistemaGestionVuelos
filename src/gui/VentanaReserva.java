package gui;
import dao.VueloDAO;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import java.sql.SQLException; 

/**
 *
 * @author sebas
 */
public class VentanaReserva extends javax.swing.JDialog {
    private VueloDAO vueloDAO;
    private int idVuelo;
    private int idReservaActual = -1;
    private boolean reservaModificada = false;

    /**
     * Creates new form VentanaReserva
     */
    
    public VentanaReserva(java.awt.Frame parent, boolean modal, int idVuelo) {
    super(parent, modal);
    initComponents();
    this.idVuelo = idVuelo;
    this.vueloDAO = new VueloDAO();
    lblIDVuelo.setText(String.valueOf(this.idVuelo));
    cargarAsientosDisponibles();
}

    
    public VentanaReserva(java.awt.Frame parent, boolean modal, int idVuelo, int idReserva, String numeroAsiento, int idPasajero) {
    super(parent, modal);
    initComponents();
    this.idReservaActual = idReserva; // Guarda el ID de la reserva para editar
    this.idVuelo = idVuelo;
    this.vueloDAO = new VueloDAO();
    
    // Precarga los campos con los datos existentes
    lblIDVuelo.setText(String.valueOf(this.idVuelo));
    cmbNumeroAsiento.setSelectedItem(numeroAsiento);
    txtIdPasajero.setText(String.valueOf(idPasajero));
    cargarAsientosDisponibles(); 
    btnConfirmarReserva.setText("Guardar Cambios");
}

    public boolean isReservaModificada() {
        return reservaModificada;
    }

     private void cargarAsientosDisponibles() {
        try {
            List<String> asientos = vueloDAO.getAsientosDisponibles(this.idVuelo);
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(asientos.toArray(new String[0]));
            cmbNumeroAsiento.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar los asientos disponibles: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIdPasajero = new javax.swing.JTextField();
        btnConfirmarReserva = new javax.swing.JButton();
        lblIDVuelo = new javax.swing.JLabel();
        cmbNumeroAsiento = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID de Vuelo    ");

        jLabel2.setText("ID de Pasajero");

        jLabel3.setText("Número de Asiento");

        btnConfirmarReserva.setText("Confirmar Reserva");
        btnConfirmarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarReservaActionPerformed(evt);
            }
        });

        lblIDVuelo.setText("jLabel4");

        cmbNumeroAsiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmarReserva)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdPasajero, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(lblIDVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbNumeroAsiento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(86, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblIDVuelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbNumeroAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(btnConfirmarReserva)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarReservaActionPerformed
      try {
        // Obtiene los valores de los componentes de la interfaz de usuario
        String numeroAsiento = (String) cmbNumeroAsiento.getSelectedItem();
        int idPasajero = Integer.parseInt(txtIdPasajero.getText());
        
        // Determina si es una nueva reserva o una edición
        if (this.idReservaActual == -1) {
            // Lógica para CREAR una nueva reserva
            
            // 1. Validar que se haya seleccionado un asiento
            if (numeroAsiento == null || numeroAsiento.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, selecciona un asiento.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // 2. Crear el objeto Reserva y asignar sus valores
            modelo.Reserva reserva = new modelo.Reserva();
            reserva.setFechaReserva(java.time.LocalDate.now());
            reserva.setNumeroAsiento(numeroAsiento);
            reserva.setEstadoReserva("Confirmada");
            reserva.setIdVuelo(this.idVuelo);
            reserva.setIdPasajero(idPasajero);

            // 3. Llamar al método del DAO para crear la reserva
            this.vueloDAO.crearReserva(reserva);

            JOptionPane.showMessageDialog(this, "Reserva creada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        
        } else {
            // Lógica para EDITAR una reserva existente
            
            // 1. Validar que se haya seleccionado un asiento
            if (numeroAsiento == null || numeroAsiento.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, selecciona un asiento.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // 2. Llamar al método del DAO para actualizar la reserva
            this.vueloDAO.editarReserva(this.idReservaActual, numeroAsiento, idPasajero);
            
            // 3. Actualizar la bandera para que la ventana que la llamó sepa que se hicieron cambios
            this.reservaModificada = true;

            JOptionPane.showMessageDialog(this, "Reserva editada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }

        // 4. Cierra la ventana del diálogo al finalizar la operación
        this.dispose();

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor numérico válido para el ID del pasajero.", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (java.sql.SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error de base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnConfirmarReservaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmarReserva;
    private javax.swing.JComboBox<String> cmbNumeroAsiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblIDVuelo;
    private javax.swing.JTextField txtIdPasajero;
    // End of variables declaration//GEN-END:variables
}
