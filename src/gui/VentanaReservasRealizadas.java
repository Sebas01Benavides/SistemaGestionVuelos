package gui;
import dao.VueloDAO;
import modelo.Reserva;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author sebas
 */
public class VentanaReservasRealizadas extends javax.swing.JDialog {
    private VueloDAO vueloDAO;

    /**
     * Creates new form VentanaReservas
     */
    public VentanaReservasRealizadas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.vueloDAO = new VueloDAO();
        cargarReservasTabla();
    }

    private void cargarReservasTabla() {
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"ID Reserva", "Fecha", "Asiento", "Estado", "ID Vuelo", "ID Pasajero"}, 0
        );
        jTableReservas.setModel(model); // Asegúrate de que tu JTable se llame jTableReservas

        try {
            List<Reserva> reservas = vueloDAO.obtenerReservas();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

            for (Reserva r : reservas) {
                model.addRow(new Object[]{
                    r.getIdReserva(),
                    r.getFechaReserva().format(formatter),
                    r.getNumeroAsiento(),
                    r.getEstadoReserva(),
                    r.getIdVuelo(),
                    r.getIdPasajero()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar las reservas: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReservas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnEditarReservas = new javax.swing.JButton();
        btnCancelarReserva = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableReservas);

        jLabel1.setText("Reservas realizadas");

        btnEditarReservas.setText("Editar reservas");
        btnEditarReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarReservasActionPerformed(evt);
            }
        });

        btnCancelarReserva.setText("Cancelar reserva");
        btnCancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(714, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEditarReservas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEditarReservas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelarReserva)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarReservasActionPerformed
    int filaSeleccionada = jTableReservas.getSelectedRow();
    
    // Verifica si el usuario seleccionó una fila
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una reserva para editar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Obtener los datos de la fila seleccionada
    DefaultTableModel model = (DefaultTableModel) jTableReservas.getModel();
    int idReserva = (int) model.getValueAt(filaSeleccionada, 0); // ID de la reserva
    int idVuelo = (int) model.getValueAt(filaSeleccionada, 4); // ID del vuelo
    String numeroAsiento = (String) model.getValueAt(filaSeleccionada, 2); // Asiento
    int idPasajero = (int) model.getValueAt(filaSeleccionada, 5); // ID del pasajero
    
    // Ahora, crea una nueva instancia de VentanaReserva en modo edición
    VentanaReserva editarDialog = new VentanaReserva(null, true, idVuelo, idReserva, numeroAsiento, idPasajero);
    editarDialog.setVisible(true);

    // Actualiza la tabla después de editar
    if (editarDialog.isReservaModificada()) {
        cargarReservasTabla();
    }


    }//GEN-LAST:event_btnEditarReservasActionPerformed

    private void btnCancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarReservaActionPerformed
        int filaSeleccionada = jTableReservas.getSelectedRow();
    
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una reserva para cancelar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    DefaultTableModel model = (DefaultTableModel) jTableReservas.getModel();
    int idReserva = (int) model.getValueAt(filaSeleccionada, 0);
    
    int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres cancelar esta reserva?", "Confirmar Cancelación", JOptionPane.YES_NO_OPTION);
    
    if (confirmacion == JOptionPane.YES_OPTION) {
        try {
            vueloDAO.cancelarReserva(idReserva);
            JOptionPane.showMessageDialog(this, "Reserva cancelada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            cargarReservasTabla(); // Recarga la tabla
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cancelar la reserva: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnCancelarReservaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaReservasRealizadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaReservasRealizadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaReservasRealizadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaReservasRealizadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaReservasRealizadas dialog = new VentanaReservasRealizadas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarReserva;
    private javax.swing.JButton btnEditarReservas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableReservas;
    // End of variables declaration//GEN-END:variables
}
